{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "description": "Queries",
  "oneOf": [
    {
      "description": "lists all offspring whose owner is the given address.",
      "type": "object",
      "required": [
        "list_my_offspring"
      ],
      "properties": {
        "list_my_offspring": {
          "type": "object",
          "properties": {
            "address": {
              "description": "address whose activity to display",
              "type": [
                "string",
                "null"
              ]
            },
            "filter": {
              "description": "optional filter for only active or inactive offspring.  If not specified, lists all",
              "default": null,
              "anyOf": [
                {
                  "$ref": "#/definitions/FilterTypes"
                },
                {
                  "type": "null"
                }
              ]
            },
            "page_size": {
              "description": "optional number of offspring to return in this page (applies to both active and inactive). Default: DEFAULT_PAGE_SIZE",
              "default": null,
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "permit": {
              "description": "permit used to validate the querier. Disregarded if viewing key - address pair is provided.",
              "anyOf": [
                {
                  "$ref": "#/definitions/Permit_for_TokenPermissions"
                },
                {
                  "type": "null"
                }
              ]
            },
            "start_page": {
              "description": "start page for the offsprings returned and listed (applies to both active and inactive). Default: 0",
              "default": null,
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "viewing_key": {
              "description": "viewing key",
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "lists all active offspring in reverse chronological order",
      "type": "object",
      "required": [
        "list_active_offspring"
      ],
      "properties": {
        "list_active_offspring": {
          "type": "object",
          "properties": {
            "page_size": {
              "description": "optional number of offspring to return in this page. Default: DEFAULT_PAGE_SIZE",
              "default": null,
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_page": {
              "description": "start page for the offsprings returned and listed. Default: 0",
              "default": null,
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "lists inactive offspring in reverse chronological order.",
      "type": "object",
      "required": [
        "list_inactive_offspring"
      ],
      "properties": {
        "list_inactive_offspring": {
          "type": "object",
          "properties": {
            "page_size": {
              "description": "optional number of offspring to return in this page. Default: DEFAULT_PAGE_SIZE",
              "default": null,
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_page": {
              "description": "start page for the offsprings returned and listed. Default: 0",
              "default": null,
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "authenticates the supplied address/viewing key. This should be called by offspring.",
      "type": "object",
      "required": [
        "is_key_valid"
      ],
      "properties": {
        "is_key_valid": {
          "type": "object",
          "required": [
            "address",
            "viewing_key"
          ],
          "properties": {
            "address": {
              "description": "address whose viewing key is being authenticated",
              "type": "string"
            },
            "viewing_key": {
              "description": "viewing key",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "authenticates the supplied permit. This should be called by offspring.",
      "type": "object",
      "required": [
        "is_permit_valid"
      ],
      "properties": {
        "is_permit_valid": {
          "type": "object",
          "required": [
            "permit"
          ],
          "properties": {
            "permit": {
              "$ref": "#/definitions/Permit_for_TokenPermissions"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "FilterTypes": {
      "description": "the filter types when viewing an address' offspring",
      "type": "string",
      "enum": [
        "active",
        "inactive",
        "all"
      ]
    },
    "PermitParams_for_TokenPermissions": {
      "type": "object",
      "required": [
        "allowed_tokens",
        "chain_id",
        "permissions",
        "permit_name"
      ],
      "properties": {
        "allowed_tokens": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "chain_id": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenPermissions"
          }
        },
        "permit_name": {
          "type": "string"
        }
      }
    },
    "PermitSignature": {
      "type": "object",
      "required": [
        "pub_key",
        "signature"
      ],
      "properties": {
        "pub_key": {
          "$ref": "#/definitions/PubKey"
        },
        "signature": {
          "$ref": "#/definitions/Binary"
        }
      }
    },
    "Permit_for_TokenPermissions": {
      "type": "object",
      "required": [
        "params",
        "signature"
      ],
      "properties": {
        "params": {
          "$ref": "#/definitions/PermitParams_for_TokenPermissions"
        },
        "signature": {
          "$ref": "#/definitions/PermitSignature"
        }
      }
    },
    "PubKey": {
      "type": "object",
      "required": [
        "type",
        "value"
      ],
      "properties": {
        "type": {
          "description": "ignored, but must be \"tendermint/PubKeySecp256k1\" otherwise the verification will fail",
          "type": "string"
        },
        "value": {
          "description": "Secp256k1 PubKey",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        }
      }
    },
    "TokenPermissions": {
      "oneOf": [
        {
          "description": "Allowance for SNIP-20 - Permission to query allowance of the owner & spender",
          "type": "string",
          "enum": [
            "allowance"
          ]
        },
        {
          "description": "Balance for SNIP-20 - Permission to query balance",
          "type": "string",
          "enum": [
            "balance"
          ]
        },
        {
          "description": "History for SNIP-20 - Permission to query transfer_history & transaction_hisotry",
          "type": "string",
          "enum": [
            "history"
          ]
        },
        {
          "description": "Owner permission indicates that the bearer of this permit should be granted all the access of the creator/signer of the permit.  SNIP-721 uses this to grant viewing access to all data that the permit creator owns and is whitelisted for. For SNIP-721 use, a permit with Owner permission should NEVER be given to anyone else.  If someone wants to share private data, they should whitelist the address they want to share with via a SetWhitelistedApproval tx, and that address will view the data by creating their own permit with Owner permission",
          "type": "string",
          "enum": [
            "owner"
          ]
        }
      ]
    }
  }
}
